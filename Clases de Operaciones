public abstract class Operacion {
	
}
---------------------------------------------------------------------------------------------------
public class Transferencia extends Operacion implements Reversible {
	
	
	public void transferir(Cuenta cuenta1, Cuenta cuenta2, double montoATransferir) {
		
		cuenta1.quitarSaldo(montoATransferir);
		cuenta2.agregarSaldo(montoATransferir);
//		cuenta1.agregarMovimiento("Transferencia", -montoATransferir, cuenta1.obtenerSaldo());
//		cuenta2.agregarMovimiento("Transferencia", montoATransferir, cuenta2.obtenerSaldo());

	}
	public void revertirMovimiento(Cuenta...cuentas) {

		for(Cuenta cuenta : cuentas) {
			
			cuenta.cambiarSaldo(cuenta.obtenerSaldoPrevio());
			
		}

	}
}
-----------------------------------------------------------------------------------------------------
public class Deposito extends Operacion {
	
	public void depositar(Cuenta cuenta, double monto) {
		
		cuenta.agregarSaldo(monto);
//		cuenta.agregarMovimiento("Depósito", monto, cuenta.obtenerSaldo());
		
	}
}
------------------------------------------------------------------------------------------------------
public class ConsultarSaldo extends Operacion {
	
	public double consultarSaldo(Cuenta cuenta) {
		
		return cuenta.obtenerSaldo();
		
	}
}
------------------------------------------------------------------------------------------------------
public class Extraccion extends Operacion {
	
	public void extraerFondos(Cuenta cuenta, double monto) { 
		
		cuenta.quitarSaldo(monto);
//		cuenta.agregarMovimiento("Extracción", monto, cuenta.obtenerSaldo());
		
	}
}
------------------------------------------------------------------------------------------------------

public class ComprarDolares extends Operacion {
	
	public void comprarDolares(Cuenta cuenta1, Cuenta cuenta2, double montoEnDolares) { //El usuario ingresaría la cantidad en dólares que quiere sacar.
		
		double montoEnPesos = montoEnDolares / 0.015;  //
		cuenta1.quitarSaldo(montoEnPesos * 1.3); //<--- Impuesto
		cuenta2.agregarSaldo( montoEnDolares);
//		cuenta1.agregarMovimiento("CompraDeDolares", -montoEnPesos, cuenta1.obtenerSaldo());
//		cuenta2.agregarMovimiento("CompraDeDolares", montoEnDolares, cuenta2.obtenerSaldo());
		
	}
}
-----------------------------------------------------------------------------------------------------------
import java.util.List;

public class HistorialMovimientos {
	
	public void agregarMovimiento(List<String> lista, String movimiento) {
		
		lista.add(movimiento);
		
	}

}
-----------------------------------------------------------------------------------------------------------

public interface Reversible {
	
	public void revertirMovimiento(Cuenta...cuentas);

}


